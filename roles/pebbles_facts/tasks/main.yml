- name: set facts for environment context
  set_fact:
    os_env_path: "{{ os_env_path|default('/opt/deployment/pebbles-environments') }}"

- name: check if group vars for this environment exist in global group vars directory
  become: no
  delegate_to: localhost
  stat:
    path: "{{ os_env_path }}/group_vars/{{ cluster_name }}"
  register: _stat_res

- name: set a fact to indicate an old inventory format
  set_fact:
    env_uses_shared_group_vars: "{{ _stat_res.stat.exists | bool }}"

- name: get context for current environment
  include_vars:
    dir: "{{ os_env_path }}/group_vars/{{ cluster_name }}"
  no_log: "{{ show_hidden_logs|d(False) == False }}"
  when: env_uses_shared_group_vars

- name: figure out ssh_config_file location
  set_fact:
    ssh_config_file: "{{lookup('env', 'HOME')}}/.ssh/config"

- when:
    - deployment_type in ('k3s',)
    - groups.nodes | length == 0
    - compute_node_count > 0
  block:
    - name:
      set_fact:
        compute_node_ids: "101"
      when:
        - compute_node_count == 1

    - name: populate K3s compute_node_ids for Heat to look up
      set_fact:
        compute_node_ids: "{{ compute_node_ids | d('101') + ',' + item }}"
      # sequence needs a bit of trickery because the expression is still evaluated even if 'when' condition is false
      with_sequence: start=2 end="{{ [compute_node_count, 2] | max }}" format="1%02x"
      when:
        - compute_node_count > 1

    - name: add nodes to inventory
      add_host:
        name: "{{ cluster_name }}-node-{{ item }}"
        groups: nodes
        ansible_ssh_host: "{{ network_prefix }}.{{ item }}"
      with_items: "{{ compute_node_ids.split(',') }}"

# check for deprecated pebbles_network_prefix and provide backwards compatibility
- when:
    - network_prefix is not defined
    - pebbles_network_prefix is defined
  block:
    - debug:
        msg: Setting network_prefix for backwards compatibility for legacy deployments

    - pause:
        seconds: 2

    - name: Setting network_prefix for backwards compatibility for legacy deployments
      set_fact:
        network_prefix: "{{ pebbles_network_prefix }}"

# get repository version data if we have not done that already
- when:
    - repo_version_data is not defined
  block:
    - name: get pebbles repository versions
      become: no
      delegate_to: localhost
      shell: |
        for repo in pebbles-deploy pebbles-environments; do
          (echo $repo; cd /opt/deployment/$repo && git branch --show-current && git show | head -3; echo)
        done
      register: _repo_version_output

    - set_fact:
       repo_version_data: |
         {{ _repo_version_output.stdout }}

# set facts for predefined addresses
- set_fact:
    jump_host_vm_ip: "{{ network_prefix }}.10"
    master_vm_ip: "{{ network_prefix }}.11"
    nfs_vm_ip: "{{ network_prefix }}.21"
  when: deployment_type == 'k3s'
