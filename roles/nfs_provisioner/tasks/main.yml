---
- name: download provisioner binary
  get_url:
    url: "{{ provisioner_binary_url }}"
    dest: /tmp/_nfs-provisioner
    mode: '0755'

- name: copy binary in place
  copy:
    src: /tmp/_nfs-provisioner
    remote_src: yes
    dest: /usr/local/sbin/nfs-provisioner
    mode: '0755'
  register: _copy_provisioner_binary

- name: remove tmp binary
  file:
    dest: /tmp/_nfs-provisioner
    state: absent

- name: make a log directory
  file:
    name: /var/log/nfs-provisioner
    state: directory
    mode: '0755'

- name: copy kubeconfig from master
  slurp:
    src: /etc/rancher/k3s/k3s.yaml
  register: _admin_kube_config
  delegate_to: "{{ cluster_name }}-master"
  no_log: true

- name: upload kubeconfig to nfs
  copy:
    content: >
      {{
        _admin_kube_config.content
        | b64decode
        | replace('https://127.0.0.1', 'https://' +  hostvars[cluster_name + '-master'].ansible_ssh_host)
      }}
    dest: /usr/local/etc/nfs-provisioner.kube_config
    mode: "0600"
  no_log: true

- name: install systemd service
  template:
    src: nfs-provisioner.service.j2
    dest: /etc/systemd/system/nfs-provisioner.service
    mode: '0644'
  register: _provisioner_service

- name: reread systemd unit files
  systemd:
    daemon_reload: yes
  when:
    - _provisioner_service.changed

- name: enable and start nfs-provisioner
  systemd:
    name: nfs-provisioner
    enabled: true
    state: "{{ _copy_provisioner_binary.changed | ternary('restarted', 'started') }}"
