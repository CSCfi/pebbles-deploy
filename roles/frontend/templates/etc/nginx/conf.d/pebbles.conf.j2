upstream gunicorn_api_server {
  server api:8888 fail_timeout=0;
}

{% if enable_shibboleth | bool %}
upstream sso_login_server {
  server sso fail_timeout=0;
}
{% endif %}

server {
    listen 80;
    server_tokens off;  # turn off the version number
    server_name {{ domain_name }};
    return 301 https://{{ domain_name }}$request_uri;
}

server {
    listen 443 ssl;

    access_log {{ nginx_access_log_file }};
    error_log  {{ nginx_error_log_file }};

    server_name {{ domain_name }};

    server_tokens off;  # turn off the version number

    charset utf-8;

    ssl on;
    ssl_certificate           {{ nginx_ssl_crt }};
    ssl_certificate_key       {{ nginx_ssl_key }};
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    client_max_body_size 1024M;
    client_body_timeout 10s;
    client_header_timeout 10s;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Cache-Control 'no-store, no-cache, must-revalidate';
    add_header Pragma no-cache;
    add_header Strict-Transport-Security max-age=31536000;  # 1 year time limit
    add_header Content-Security-Policy "img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; connect-src 'self' wss://{{ domain_name }} ; style-src 'self' 'unsafe-inline'; default-src 'self'";  # does not work without unsafe-inline / unsafe-eval

    location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        expires epoch;

        if (!-f $request_filename) {
            proxy_pass http://gunicorn_api_server;
            break;
        }
    }

{% if enable_shibboleth | bool %}
    location ~* /(login|csclogin|Shibboleth.sso).* {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_pass_request_headers on;
        proxy_redirect off;

        proxy_pass http://sso_login_server;
    }
{% endif %}


    location / {
        alias {{ nginx_static_root }}/;
        autoindex off;
    }

    location /provisioning_logs {
        alias {{ provisioning_log_file_root }}/;
        autoindex off;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
        alias {{ nginx_static_root }}/favicon.ico;
    }

    include {{ frontend_proxy_config_dir }}/proxy.conf;
}
