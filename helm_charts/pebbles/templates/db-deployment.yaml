{{- if .Values.dbDeploymentEnabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  annotations:
    description: Deploy PostgreSQL database
spec:
  replicas: 1
  selector:
    matchLabels:
      name: db
  strategy:
    type: Recreate
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        name: db
      name: db
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: "{{ $value}}"
        {{- end }}
      {{- end }}
      containers:
        - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: pebbles
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: pebbles
            - name: POSTGRESQL_DATABASE
              value: pebbles
          image: {{ .Values.dbImage }}
          imagePullPolicy: {{ .Values.dbImagePullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.dbCpuRequest }}
              memory: {{ .Values.dbMemoryRequest }}
            limits:
              cpu: {{ .Values.dbCpuLimit }}
              memory: {{ .Values.dbMemoryLimit }}
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE}
                  -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: db-data
      volumes:
        - name: db-data
        {{- if .Values.databaseVolumeSize }}
          persistentVolumeClaim:
            claimName: db
        {{- else }}
          emptyDir: {}
        {{- end }}
{{- end }}
