{{- if .Values.deployCentralLogging }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: logstash
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      name: logstash
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: logstash
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: "{{ $value}}"
        {{- end }}
      {{- end }}
      containers:
        - name: logstash
          image: {{ .Values.imagePrefix }}logstash:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: {{ .Values.logstashCpuRequest }}
              memory: {{ .Values.logstashMemoryRequest }}
            limits:
              cpu: {{ .Values.logstashCpuLimit }}
              memory: {{ .Values.logstashMemoryLimit }}
          ports:
            - containerPort: 5044
              name: api
              protocol: TCP
            - containerPort: 9600
              name: monitoring-api
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 9600
              scheme: HTTP
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /usr/share/logstash/data
              name: data
      volumes:
        - name: data
        {{- if .Values.logstashVolumeSize }}
          persistentVolumeClaim:
            claimName: logstash
        {{- else }}
          emptyDir: {}
        {{- end }}
{{- end }}
