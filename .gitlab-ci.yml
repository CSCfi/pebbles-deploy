---
variables:
  KUBERNETES_MEMORY_REQUEST: "1Gi"
  KUBERNETES_MEMORY_LIMIT: "1Gi"
  REGISTRY_AUTH_FILE: /run/secrets/runner-job-secrets/docker_config_ci.json
  RUNNER_AFTER_SCRIPT_TIMEOUT: 60m
  PEBBLES_DEPLOY_IMAGE_TAG:
    description: 'use custom tag for pebbles-deploy in cicd-pipeline'
    value: 'main'
  # Parameters for running the builds manually
  BUILD_ALL_IMAGES:
    description: 'Build all images regardless of changes'
    value: 'false'
    options:
      - 'false'
      - 'true'
  BUILD_SINGLE_IMAGE:
    description: 'Build a single image regardless of changes'
    value: ''
    options:
      - ''
      - filebeat
      - k3s-autoscaler
      - logstash
      - pebbles-backup
      - pebbles-deployer

stages:
  - build
  - cicd-pipeline

# We make use of all builds being identical. The build target is defined by COMPONENT in job variables.
.job_template: &job_definition
  stage: build
  tags: [ 'new-runner' ]
  image: quay.io/buildah/stable:v1.39
  rules:
    # feature branch: build only images that have been modified
    - if: $CI_COMMIT_BRANCH
      changes:
        compare_to: 'refs/heads/main'
        paths:
          - "container-src/$COMPONENT/**/*"
    # merge to main: build changed images compared to the previous commit
    - if: ($CI_COMMIT_REF_NAME == 'main' && $CI_PIPELINE_SOURCE == "push")
      changes:
        paths:
          - "container-src/$COMPONENT/**/*"
    # pipeline UI: build all images if desired
    - if: $BUILD_ALL_IMAGES == 'true'
    # pipeline UI: build a single image
    - if: $BUILD_SINGLE_IMAGE == $COMPONENT

  # Setup buildah cache for all jobs
  before_script:
    - |
      cat > /etc/containers/registries.conf.d/cache.conf <<EOF
      [[registry]]
      location = "private-registry:5000"
      insecure = true
      EOF
  script:
    - cd "${CI_PROJECT_DIR}/container-src/${COMPONENT}"
    - buildah build
      --storage-driver vfs
      --jobs 4
      --layers --cache-from private-registry:5000/pebbles/cache --cache-to private-registry:5000/pebbles/cache
      --tag "${CI_IMAGE_REPO_CI}/${COMPONENT}:${CI_COMMIT_REF_NAME}"
      ${BUILDAH_EXTRA_ARGS}
    - buildah push
      --storage-driver vfs
      "${CI_IMAGE_REPO_CI}/${COMPONENT}:${CI_COMMIT_REF_NAME}"

build-pebbles-deployer-image:
  variables:
    COMPONENT: pebbles-deployer
    KUBERNETES_MEMORY_REQUEST: "4Gi"
    KUBERNETES_MEMORY_LIMIT: "4Gi"
    BUILDAH_EXTRA_ARGS: >
      --build-arg 
      PEBBLES_DEPLOY_SRC=https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/pebbles/pebbles-deploy.git
  <<: *job_definition

build-pebbles-backup-image:
  variables:
    COMPONENT: pebbles-backup
  <<: *job_definition

build-logstash-image:
  variables:
    COMPONENT: logstash
  <<: *job_definition

build-filebeat-image:
  variables:
    COMPONENT: filebeat
  <<: *job_definition

build-k3s-autoscaler-image:
  variables:
    COMPONENT: k3s-autoscaler
  <<: *job_definition

# call pipeline project
cicd-pipeline:
  stage: cicd-pipeline
  variables:
    # test using current branch code and image
    PEBBLES_DEPLOY_COMMIT_REF_NAME: "${CI_COMMIT_REF_NAME}"
    PEBBLES_DEPLOY_IMAGE_TAG: "${PEBBLES_DEPLOY_IMAGE_TAG}"
  trigger:
    project: pebbles/cicd-pipeline
    branch: main
    strategy: depend
