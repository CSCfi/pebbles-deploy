---
- name: Generate ssh config
  hosts: localhost
  gather_facts: no
  connection: local
  roles:
    - pebbles_facts
  tasks:
    - when:
        - deployment_type in ('heat', 'gitlab-runner-heat', 'k3s')
      block:
        - name: check if stack has been provisioned already
          shell: openstack stack show {{ cluster_name }}
          register: stack_output_base
          failed_when: false
          changed_when: false
          no_log: True

        - set_fact:
            stack_exists: "{{ stack_output_base.stderr.find('Stack not found') == -1 }}"

    # standard ssh config generation
    - when:
      - stack_exists | d(false) | bool
      - deployment_type in ('heat', )
      block:
        - name: create $HOME/.ssh/
          file:
            dest: "{{lookup('env', 'HOME')}}/.ssh/"
            state: directory

        - name: add cluster common ssh config
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }}-* {{ network_prefix }}.* {{ jump_host_public_ip }}
                User cloud-user
                ForwardAgent no
                GSSAPIAuthentication no
                StrictHostKeyChecking no
                UserKnownHostsFile /dev/null
                IdentityFile /dev/shm/{{ cluster_name }}/id_rsa
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }} common"

        - name: add ssh config entry for jump host
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }}-jump {{ jump_host_public_ip }} {{ hostvars[groups['jump_host'][0]].ansible_ssh_host }}
                  HostName {{ jump_host_public_ip }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: jump"

        - name: add ssh config entry for docker host
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ docker_host_inventory_hostname }} {{ hostvars[docker_host_inventory_hostname].ansible_ssh_host }}
                  ProxyCommand ssh -q cloud-user@{{ jump_host_public_ip }} nc %h %p
                  HostName {{ hostvars[docker_host_inventory_hostname].ansible_ssh_host }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: {{ docker_host_inventory_hostname }}"
          when:
            - docker_host_inventory_hostname in hostvars

    # gitlab-runner single VM config generation
    - when:
      - stack_exists | d(false) | bool
      - deployment_type in ('gitlab-runner-heat',)
      block:
        - name: create $HOME/.ssh/
          file:
            dest: "{{lookup('env', 'HOME')}}/.ssh/"
            state: directory

        - name: add ssh config entry for runner
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }} {{ public_ip }} {{ hostvars[groups['runner'][0]].ansible_ssh_host }}
                HostName {{ public_ip }}
                User {{ ansible_user }}
                ForwardAgent no
                GSSAPIAuthentication no
                StrictHostKeyChecking no
                UserKnownHostsFile /dev/null
                IdentityFile /dev/shm/{{ cluster_name }}/id_rsa
                ServerAliveInterval 120
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}"

    # K3s config generation
    - when:
      - stack_exists | d(false) | bool
      - deployment_type in ('k3s',)
      block:
        - name: create $HOME/.ssh/
          file:
            dest: "{{lookup('env', 'HOME')}}/.ssh/"
            state: directory

        - name: add catch-all config entry private network through jump host
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            insertafter: EOF
            block: |
              Host {{ network_prefix }}.* !{{ network_prefix }}.10
                  ProxyCommand ssh -q cloud-user@{{ jump_host_public_ip }} nc %h %p
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: catch-all"

        - name: add cluster common ssh config
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }}-* {{  network_prefix }}.* {{ jump_host_public_ip }} {{ master_public_ip }}
                  ForwardAgent no
                  GSSAPIAuthentication no
                  StrictHostKeyChecking no
                  UserKnownHostsFile /dev/null
                  IdentityFile /dev/shm/{{ cluster_name }}/id_rsa
                  ServerAliveInterval 120
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }} common"

        - name: add ssh config entry for jump host
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }}-jump {{ jump_host_public_ip }} {{ network_prefix }}.10
                  User cloud-user
                  HostName {{ jump_host_public_ip }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: jump"

        - name: add ssh config entry for master
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }}-master {{ hostvars[cluster_name + '-master'].ansible_ssh_host }}
                  User cloud-user
                  HostName {{ hostvars[cluster_name + '-master'].ansible_ssh_host }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: master"

        - name: add ssh config entry for nfs
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }}-nfs {{ hostvars[cluster_name + '-nfs'].ansible_ssh_host }}
                  User cloud-user
                  HostName {{ hostvars[cluster_name + '-nfs'].ansible_ssh_host }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: nfs"

        - name: add ssh config entry for nodes (static)
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ item }} {{ hostvars[item].ansible_ssh_host }}
                  User cloud-user
                  HostName {{ hostvars[item].ansible_ssh_host }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: {{ item }}"
          with_items: "{{ groups.nodes | d([]) }}"

        - name: list node VMs
          os_server_facts:
            server: "{{ cluster_name }}-node-*"
          register: _os_server_facts

        - name: add ssh config entry for nodes (dynamic)
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ item.name }} {{ item.private_v4 }}
                  User core
                  HostName {{ item.private_v4 }}
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}: {{ item.name }}"
          with_items: "{{ _os_server_facts.ansible_facts.openstack_servers }}"
          when: item.name not in groups.nodes

    # db-farm
    - when:
      - deployment_type in ('db-farm',)
      block:
        - name: create $HOME/.ssh/
          file:
            dest: "{{lookup('env', 'HOME')}}/.ssh/"
            state: directory

        - name: add ssh-config entry
          delegate_to: localhost
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file|default('/opt/deployment/.ssh/config') }}"
            block: |
              Host {{ cluster_name }}-{{ item }}
                  User core
                  HostName {{ hostvars[item].public_ip }}
                  ForwardAgent no
                  GSSAPIAuthentication no
                  StrictHostKeyChecking no
                  UserKnownHostsFile /dev/null
                  IdentityFile /dev/shm/{{ cluster_name }}/id_rsa
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}-{{ item }}"
          with_items: "{{ groups.dbservers | d([]) }}"
