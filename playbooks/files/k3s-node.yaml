---
heat_template_version: queens

parameters:
  env_name:
    type: string
  compute_node_ids:
    type: comma_delimited_list
  index:
    type: number
  image:
    type: string
  network:
    type: string
  network_prefix:
    type: string
  flavor:
    type: string
  key_name:
    type: string
  security_groups:
    type: json
  server_group:
    type: string
  cloud_config:
    type: json
resources:
  cloud_config_resource:
    type: "OS::Heat::CloudConfig"
    properties:
      cloud_config: { get_param: cloud_config }

  node:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: env_name-node-id
          params:
            env_name: { get_param: env_name }
            id: { get_param: [compute_node_ids, { get_param: index }]}
      image: { get_param: image }
      networks:
        - network: { get_param: network }
          fixed_ip:
            str_replace:
              template: 'network_prefix.id'
              params:
                id: { get_param: [compute_node_ids, { get_param: index }]}
                network_prefix: { get_param: network_prefix }

      metadata:
        foo: { get_param: compute_node_ids }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      security_groups: { get_param: security_groups }
      scheduler_hints:
        group: { get_param: server_group }
      user_data_format: RAW
      user_data: { get_resource: cloud_config_resource }
outputs:
  OS::stack_id:
    value: { get_resource: node }
