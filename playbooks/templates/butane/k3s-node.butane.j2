# Butane file for creating ignition definition for FCOS based k3s node
---
variant: fcos
version: 1.4.0
{% if fcos_cgroups_v1 | d(true) | bool %}
kernel_arguments:
  should_exist:
    # Rocker/RStudio does not like cgroups v2 yet
    - systemd.unified_cgroup_hierarchy=0
{% endif %}
systemd:
  units:
{% if fcos_upgrade_on_first_boot | d(false) | bool %}
    - name: oneshot-system-upgrade.service
      enabled: true
      contents: |
        [Unit]
        After=network-online.target
        Wants=network-online.target
        Before=systemd-user-sessions.service
        OnFailure=emergency.target
        OnFailureJobMode=replace-irreversibly
        ConditionPathExists=!/var/lib/system-upgraded

        [Service]
        RemainAfterExit=yes
        Type=oneshot
        ExecStart=/usr/bin/rpm-ostree upgrade
        ExecStartPost=/usr/bin/touch /var/lib/system-upgraded
        ExecStartPost=/usr/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target
{% endif %}

    - name: oneshot-k3s-installer.service
      enabled: true
      contents: |
        [Unit]
{% if fcos_upgrade_on_first_boot | d(false) | bool %}
        After=oneshot-system-upgrade.service
{% else %}
        After=network-online.target
{% endif %}
        Wants=network-online.target
        Before=systemd-user-sessions.service
        OnFailure=emergency.target
        OnFailureJobMode=replace-irreversibly
        ConditionPathExists=!/var/lib/k3s-installed

        [Service]
        RemainAfterExit=yes
        Type=oneshot
        ExecStart=/usr/local/sbin/run-k3s-installer.sh
        ExecStartPost=/usr/bin/touch /var/lib/k3s-installed
        ExecStartPost=/usr/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target

    # disable zincati
    - name: zincati.service
      mask: true

storage:
  disks:
  - device: /dev/vdb
    wipe_table: true
    partitions:
    - number: 1
      label: var
      size_mib: 0
      resize: true
  filesystems:
    - path: /var
      device: /dev/disk/by-partlabel/var
      format: xfs
      with_mount_unit: true

  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: {{ server_name }}

    - path: /usr/local/sbin/run-k3s-installer.sh
      mode: 0755
      contents:
        inline: |
          #!/usr/bin/env sh
          main() {
            export INSTALL_K3S_VERSION="{{ k3s_version }}"
            export K3S_URL="https://{{ master_vm_ip }}:6443"
            export K3S_TOKEN="{{ k3s_node_token }}"
            export K3S_KUBECONFIG_MODE="644"
            export INSTALL_K3S_EXEC="--node-label role=user --node-taint role=user:NoSchedule {{ extra_k3s_args|d('') }}"
            curl -sfL https://get.k3s.io | sh -
            return 0
          }
          main

    - path: /etc/systemd/network/50-flannel.link
      mode: 0644
      contents:
        inline: |
          [Match]
          OriginalName=flannel*
          [Link]
          MACAddressPolicy=none

    - path: /etc/rancher/k3s/registries.yaml
      mode: 0644
      contents:
        inline: |
          mirrors:
            "private-registry:5000":
              endpoint:
                - "http://{{ master_vm_ip }}:5000"

    # only do manual updates
    - path: /etc/zincati/config.d/90-disable-auto-updates.toml
      mode: 0644
      contents:
        inline: |
          [updates]
          enabled = false
