# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
    source /etc/bashrc
fi

# Define colour macros and utility functions for our custom bash prompt
YELLOW="$(tput setaf 3)"
GREEN="$(tput setaf 2)"
RESET="$(tput sgr0)"

parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/*\(.*\)/\1/' -e 's/ //g'
}

short_cwd() {
    echo $PWD | sed -e "s|^$HOME|~|g"
}

branch-info() {
    for repo in pebbles pebbles-deploy pebbles-environments; do
        branch=$(cd /opt/deployment/$repo && parse_git_branch)
        printf "%23s: %s\n" $repo $branch
    done
}

# All non-printable output should be enclosed in '\[\]' to avoid bash evaluating the prompt length wrong,
# which will in turn cause line wrapping issues
# https://unix.stackexchange.com/questions/105958/terminal-prompt-not-wrapping-correctly
export PS1='\[${YELLOW}\]${ENV_NAME}\[${RESET}\] $(short_cwd) \[${GREEN}\]($(parse_git_branch))\[${RESET}\] > '

source init_env.bash

source deploy_functions.bash

echo
echo "Branches, view with 'branch-info'":
echo
branch-info
echo
echo "Install and initialize Pebbles in an empty namespace:"
echo
echo "  install-pebbles <admin password>"
echo
echo "Update an existing installation:"
echo
echo "  cd pebbles-deploy"
echo "  helm upgrade pebbles helm_charts/pebbles -f /dev/shm/$ENV_NAME/values.yaml"
echo
echo "Completely remove a development environment, including all data:"
echo
echo "  helm delete pebbles; oc delete all --all; oc delete pvc --all; oc delete secret pebbles"
echo
